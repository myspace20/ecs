name: Build & Deploy to ECS (via CodePipeline)

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write  # Needed for OIDC with AWS

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396608771737:role/iam-GitHubActionsRole-k1Tfuq6j0w6y
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: 396608771737.dkr.ecr.eu-central-1.amazonaws.com
          ECR_REPOSITORY: java-web-app
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Prepare ECS artifacts
        run: |
          echo "Packaging ECS deployment artifacts..."
          zip -r deploy_bundle.zip appspec.yml taskdef.json

      - name: Upload ECS artifacts to S3
        run: |
          aws s3 cp deploy_bundle.zip s3://java-web-artifacts-eu-central-1/source/deploy_bundle.zip

